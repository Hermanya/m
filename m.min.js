!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var f;"undefined"!=typeof window?f=window:"undefined"!=typeof global?f=global:"undefined"!=typeof self&&(f=self),f.M=e()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module){function decorateWithBackboneMethods(M){var key;for(key in new Backbone.Model)decorateWithKey(key,M);for(key in new Backbone.Collection)decorateWithKey(key,M);decorateWithKey("toBackboneModel",M),decorateWithKey("toBackboneCollection",M)}function decorateWithKey(key,M){M[key]=M[key]||function(){var model;return this.url=this.urlFragments.join("/"),"toBackboneModel"===key?getModel(this):"toBackboneCollection"===key?getCollection(this):(model=this.isPlural?getCollection(this):getModel(this),model[key].apply(model,arguments))}}function getModel(m){return m.cache[m.url]||createModel(m)}function createModel(m){return m.cache[m.url]=new modelConstructorsPerType[m.resourceType]({id:m.id}),m.cache[m.url]}function getCollection(m){return m.cache[m.url]||createCollection(m)}function createCollection(m){return m.cache[m.url]=new(Backbone.Collection.extend({url:function(){return m.url},model:function(attributes){var model,key=m.api.prefix+"/"+m.resourceType+"/"+attributes.id;return attributes.id&&(model=m.cache[key]),model?(model.set(attributes),model):(model=new modelConstructorsPerType[m.resourceType](attributes),m.cache[key]=model,model)}})),m.cache[m.url]}var Backbone=require("backbone")||window.Backbone,M=require("./url-mapping.js"),modelConstructorsPerType={};decorateWithBackboneMethods(M),M.initializationSubscribers.push(function(m){m.mapOverResourceTypes(function(resourceType){modelConstructorsPerType[resourceType]=Backbone.Model.extend({urlRoot:m.api.prefix+"/"+resourceType,validate:function(){},saveOwnAttributes:function(){var ownAttributes=Object.keys(this.attributes).reduce(function(attributes,key){"object"!=typeof this.attributes[key]&&"id"!==key&&(attributes[key]=this.attributes[key])},{});return Backbone.ajax({method:"PUT",url:this.url(),data:JSON.stringiry(ownAttributes)})},saveCustomAttributes:function(){return Backbone.ajax({method:"POST",url:this.url()+"/attributes",data:JSON.stringiry(this.get("attributes"))})},save:function(){return Backbone.$.when(this.saveOwnAttributes(),this.saveCustomAttributes())},modelsTiedWith:[],tieTo:function(otherModel){otherModel.modelsTiedWith.forEach(function(indirectModel){this.modelsTiedWith.push(indirectModel),indirectModel.modelsTiedWith.push(this)}),this.modelsTiedWith.push(otherModel),otherModel.modelsTiedWith.push(this)},separateFromOthers:function(){this.modelsTiedWith.forEach(function(otherModel){var indexOfThis=otherModel.modelsTiedWith.indexOf(this);otherModel.modelsTiedWith.splice(indexOfThis,1)}),this.modelsTiedWith=[]},set:function(key,val,options){var attrs,url,otherModel;return key?("object"==typeof key?(attrs=key,options=val):(attrs={})[key]=val,options=options||{},attrs.id&&attrs.id!==this.get("id")&&(this.separateFromOthers(),url=m.api.prefix+"/"+resourceType+"/"+attrs.id,otherModel=m.cache[url],otherModel?this.tieTo(otherModel):m.cache[url]=this),options.stopPropagationForM||this.modelsTiedWith.forEach(function(model){model.set(attrs,{stopPropagationForM:!0})}),Backbone.Model.prototype.set.call(this,attrs,options)):this}})})}),module.exports=M},{"./url-mapping.js":2,backbone:"backbone"}],2:[function(require,module){function decorateWithSingularFormMethods(resource,m){m[resource]=function(maybeId){function appendId(id){state.id=id,state.urlFragments.push(id)}function throwInvalidArgument(){throw new Error("This function only accepts a string or a number id.")}var state=Object.create(m);state.urlFragments=(state.urlFragments||[m.api.prefix]).concat([resource]),state.resourceType=resource;var strategy={number:appendId,string:appendId,undefined:function(){}}[typeof maybeId]||throwInvalidArgument;return strategy(maybeId),state}}function decorateWithPluralFormMethods(resource,m){var pluralForm=plural(resource);m[pluralForm]=function(maybeQuery){function throwInvalidArgument(){throw new Error("This function only accepts a plain old javascript query object.")}var state=Object.create(this);state.urlFragments=(state.urlFragments||[m.api.prefix]).concat([pluralForm]),state.resourceType=resource,state.isPlural=!0;var strategy={object:function(query){state.urlFragments.push("?"+serialize(query))},undefined:function(){}}[typeof maybeQuery]||throwInvalidArgument;return strategy(maybeQuery),state}}function serialize(object,prefix){return Object.keys(object).map(function(key){var value=object[key];return prefix&&(key=prefix+"["+key+"]"),"object"==typeof value?serialize(value,key):encodeURIComponent(key)+"="+encodeURIComponent(value)}).join("&")}function plural(singularForm){return singularForm+"s"}var M=function(maybeAPI){var m=Object.create(M);return m.api=maybeAPI||{},m.cache={},M.mapOverResourceTypes(function(resourceType){decorateWithPluralFormMethods(resourceType,m),decorateWithSingularFormMethods(resourceType,m)},m),M.initializationSubscribers.map(function(f){f(m)}),m};M.mapOverResourceTypes=function(callback,m){return m=m||this,Object.keys(m.api.resources).map(callback)},M.initializationSubscribers=[],module.exports=M},{}]},{},[1])(1)});